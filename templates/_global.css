:root {
  --distance-smaller: 0.1rem;
  --distance-small: 0.3rem;

  --border-radius-small: var(--distance-small); /* Does this kinda think work? */

  --spacing-smaller: var(--distance-smaller);
  --spacing-small: 0.3rem;
  --spacing-medium: 0.5rem;
  --spacing-large: 1rem;
  --spacing-larger: 2rem;
  --spacing-big: 1rem; /* DEPRECATED name, use --spacing-large instead */
  --spacing-bigger: 2rem; /* DEPRECATED name, use --spacing-larger instead */

  --color-highlight: #A4131D;
  --color-highlight-rgb: 164, 19, 29;
  --color-highlight-lighter: rgba(var(--color-highlight-rgb), 0.1);
  --color-secondary: #666;
  --color-overlay: rgb(252, 232, 191);

  --readable-max-width: 50rem;
}

/**
 *
 *  Overriding standard HTML elements, such as <body>, <a>, <ul>, etc.
 *
 */

/* The reset */
a, article, aside,
body, blockquote,
code,
div,
figure, figcaption, footer,
header, html, h1, h2, h3, h4, h5, h6,
img,
kbd,
li,
main,
nav,
ol,
pre, p,
span,
td,
ul
{
  margin: 0;
  padding: 0;
}

body {
  font-family: sans-serif;
  -webkit-font-smoothing: antialiased;
  line-height: 1.4;
  margin: 4rem;
}
@media screen and (max-width: 600px) {
  body {
    margin: 1rem;
  }
  * {
    line-break: loose;
  }
  h1, h1 *, h2 *, h3 *, h4 *, h5 *, h6 * {
    line-break: strict;
  }
  aside {
    border-top: 1px solid lightgrey;
  }
}

main {
  max-width: 80rem; /* a readable width */
  margin-right: auto;
  margin-left: auto;
}

blockquote {
  box-shadow: 0 0 10px lightgrey;
  padding: var(--spacing-big);
  margin-bottom: var(--spacing-big);
}
  blockquote :last-child {
    margin-bottom: 0;
  }

a {
  color: var(--color-highlight);
}
  a:hover {
    color: inherit;
  }

/*   formatting code blocks   */
pre {
  padding: var(--spacing-big);
  margin-bottom: var(--spacing-big);
  overflow: auto; /* make the code scrollable if the width is too narrow */
  background-color: var(--color-highlight-lighter);
}
p code, li code {
  background-color: var(--color-highlight-lighter);
  padding: 0.1rem 0.3rem;
}
code, pre {
  font-size: 1.1em; /* Use `em` to make all <code> relative to the element that it contains, e.g. an H1. */
}

p,
:not(li) > ul,
:not(li) > ol { /* The `:not(li) > ` prefix prevents nested lists to have a margin on the sub-levels */
  margin-bottom: var(--spacing-big);
  text-align: justify;
}
ul, ol {
  margin-left: var(--spacing-bigger);
}



h1 {
  font-size: 2rem;
}
.page-home h1 {
  text-align: center;
}
h1, h2, h3, h4, h5, h6 {
  margin-bottom: var(--spacing-small);
}
  h1 code, h2 code, h3 code, h4 code, h5 code {
    background-color: var(--color-highlight-lighter);
  }

@media screen and (max-width: 600px) {
  h1, h2, h3, h4, h5, h6 {
    text-align: center;
  }
}

/*   styling images    */
img.sizeup-onhover-image {
  transition: 0.2s linear;
  transition-delay: 0.5s;
}
  img.sizeup-onhover-image:hover {
    box-shadow: 0.3em 0.3em 1em rgba(0, 0, 0, 0.2);
  }
  img.sizeup-onhover-image.scale2:hover {
    transform: scale(2);
  }
  img.sizeup-onhover-image.scale4:hover {
    transform: scale(4);
  }
  img.sizeup-onhover-image.origin-left-top:hover {
    transform-origin: left top;
  }
  img.sizeup-onhover-image.origin-left-center:hover {
    transform-origin: left center;
  }
  img.sizeup-onhover-image.origin-right-top:hover {
    transform-origin: right top;
  }
@media screen and (max-width: 600px) {
  img {
    max-width: 90%;
  }
}

figure {
  margin-bottom: var(--spacing-big);
  margin-right: var(--spacing-big);
  padding: var(--spacing-big);
  box-shadow: 0 0 10px lightgrey;
  display: inline-block;
}
  figure.float-right {
    float: right;
  }
@media screen and (max-width: 600px) {
  figure.float-right {
    float: none;
  }
}
figcaption {
  font-style: italic;
}

td {
  padding: 0.5rem;
  background-color: lightgrey;
}

.metadata {
  color: var(--color-secondary);
  margin-bottom: var(--spacing-small);
}

footer {
  padding: var(--spacing-bigger);
  margin-top: var(--spacing-bigger);
  border-top: 1px solid lightgrey;
  display: flex;
  flex-direction: column;
  align-items: center;
}
  footer div {
    text-align: center;
    margin-top: var(--spacing-bigger);
  }
  footer ul {
    margin: 0;
    padding: 0;
    display: block;
  }
  footer li {
    list-style: none;
    display: inline;
    margin: var(--spacing-small);
  }

kbd {
  border-radius: 3px;
  border: 1px solid #b4b4b4;
  padding: 0.1rem var(--spacing-small);
  white-space: nowrap;
}

/*   twitter styling    */

blockquote.twitter-tweet {
  font-weight: bold;
  display: inline-block;
  box-shadow: 0 0 10px lightgrey;
}
  blockquote.twitter-tweet p {
    font-weight: normal;
  }
  blockquote.twitter-tweet a {
    font-weight: normal;
  }
  blockquote.twitter-tweet a:hover,
  blockquote.twitter-tweet a:focus {
    text-decoration: underline;
  }

.content {
  flex: 3;

  /* Needed for the pre's overflow:auto to work and make the code boxes scrollable when they are too wide.
    learned it at https://stackoverflow.com/questions/36247140/why-dont-flex-items-shrink-past-content-size */
  min-width: 0;
}

